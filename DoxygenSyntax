Thanks to Franck Hecht for his examples : http://franckh.developpez.com/tutoriels/outils/doxygen/
It a former version, it renders : http://franckh.developpez.com/tutoriels/outils/doxygen/fichiers/exemple-c-001/index.html

This file shows examples of Doxygen comments.

/**
 * \file main.c
 * \brief Programme de tests.
 * \author Franck.H
 * \version 0.1
 * \date 6 septembre 2007
 *
 * Programme de test pour l'objet de gestion des chaînes de caractères Str_t.
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
 
/**
 * \struct Str_t
 * \brief Objet chaîne de caractères.
 *
 * Str_t est un petit objet de gestion de chaînes de caractères. 
 * La chaîne se termine obligatoirement par un zéro de fin et l'objet 
 * connait la taille de chaîne contient !
 */
typedef struct
{
   char * sz;  /*!< Chaîne avec  caractère null de fin de chaîne. */
   size_t len; /*!< Taille de la chaîne sz sans compter le zéro de fin. */
}
Str_t;
 
 
/**
 * \enum Str_err_e
 * \brief Constantes d'erreurs.
 *
 * Str_err_e est une série de constantes prédéfinie pour diverses futures 
 * fonctions de l'objet Str_t.
 */
typedef enum
{
   STR_NO_ERR,    /*!< Pas d'erreur. */
   STR_EMPTY_ERR, /*!< Erreur: Objet vide ou non initialisé. */
 
   NB_STR_ERR     /*!< Nombre total de constantes d'erreur. */
}
Str_err_e;


/**
 * \fn int Str_err_e str_destroy (Str_t ** self)
 * \brief Fonction de destruction de l'objet Str_t.
 *
 * \param self Adresse de ll'objet Str_t à détruire.
 * \return 0 si aucune erreur, 0 sinon.
 */
int Str_err_e str_destroy (Str_t ** self)
{
   Str_err_e err = STR_EMPTY_ERR;
 
   if (self != NULL && *self != NULL)
   {
      free (* self);
      *self = NULL;
 
      err = STR_NO_ERR;
   }
 return 0;
}

Thanks to Franck Hecht for his examples : http://franckh.developpez.com/tutoriels/outils/doxygen/
It a former version, it renders : http://franckh.developpez.com/tutoriels/outils/doxygen/fichiers/exemple-c-001/index.html
