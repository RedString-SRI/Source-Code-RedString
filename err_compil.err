SearchEngine/SearchEngine.c: In function ‘researchIMG’:
SearchEngine/SearchEngine.c:142:5: warning: passing argument 1 of ‘getAddress’ from incompatible pointer type [enabled by default]
     ID=getAddress(imgbase,path);
     ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:105:6: note: expected ‘ListBaseDesc’ but argument is of type ‘struct FILE *’
 long getAddress(ListBaseDesc list, char * path);
      ^
SearchEngine/SearchEngine.c:142:5: warning: passing argument 2 of ‘getAddress’ from incompatible pointer type [enabled by default]
     ID=getAddress(imgbase,path);
     ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:105:6: note: expected ‘char *’ but argument is of type ‘char **’
 long getAddress(ListBaseDesc list, char * path);
      ^
SearchEngine/SearchEngine.c:143:5: warning: passing argument 1 of ‘getDesc’ from incompatible pointer type [enabled by default]
     imgDsc=getDesc(imgbase , ID , PICTURE);
     ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:75:8: note: expected ‘BaseDesc’ but argument is of type ‘struct FILE *’
 void * getDesc(BaseDesc base, long address, FileType type);
        ^
SearchEngine/SearchEngine.c:146:6: warning: conversion lacks type at end of format [-Wformat=]
      fscanf(imgbase , "%l" , &ID );
      ^
SearchEngine/SearchEngine.c:146:6: warning: too many arguments for format [-Wformat-extra-args]
SearchEngine/SearchEngine.c:147:6: warning: format ‘%s’ expects argument of type ‘char *’, but argument 3 has type ‘char **’ [-Wformat=]
      fscanf(imgbase, "%s" , pathOfList); // Search the iTh path of the ListBASE
      ^
SearchEngine/SearchEngine.c:149:6: warning: passing argument 1 of ‘getDesc’ from incompatible pointer type [enabled by default]
      fileOfDesc=getDesc(imgbase , ID , SOUND); // open the link of the linked descript
      ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:75:8: note: expected ‘BaseDesc’ but argument is of type ‘struct FILE *’
 void * getDesc(BaseDesc base, long address, FileType type);
        ^
SearchEngine/SearchEngine.c:150:6: warning: passing argument 2 of ‘compareFileIMG’ from incompatible pointer type [enabled by default]
      percent=compareFileIMG(imgDsc , fileOfDesc );
      ^
SearchEngine/SearchEngine.c:63:7: note: expected ‘struct PictureDesc *’ but argument is of type ‘struct FILE *’
 float compareFileIMG(PictureDesc *imgD1 , PictureDesc *imgD2){
       ^
SearchEngine/SearchEngine.c:151:6: warning: passing argument 1 of ‘addOrderVD’ from incompatible pointer type [enabled by default]
      addOrderVD(*PilevalDesc , percent , pathOfList); // add in decrease Order
      ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:88:6: note: expected ‘struct vd **’ but argument is of type ‘PileVD’
 void addOrderVD(PileVD *pvd, float perct , char nFile);
      ^
SearchEngine/SearchEngine.c:151:6: warning: passing argument 3 of ‘addOrderVD’ makes integer from pointer without a cast [enabled by default]
      addOrderVD(*PilevalDesc , percent , pathOfList); // add in decrease Order
      ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:88:6: note: expected ‘char’ but argument is of type ‘char **’
 void addOrderVD(PileVD *pvd, float perct , char nFile);
      ^
SearchEngine/SearchEngine.c:155:5: warning: passing argument 1 of ‘printBestList’ from incompatible pointer type [enabled by default]
     printBestList(PilevalDesc , 0);
     ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:94:6: note: expected ‘PileVD’ but argument is of type ‘struct vd **’
 void printBestList(PileVD pvd , int j);
      ^
SearchEngine/SearchEngine.c:161:8: warning: passing argument 1 of ‘getChoosenFile’ from incompatible pointer type [enabled by default]
        strcat(openPath , getChoosenFile(PilevalDesc,choice));
        ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:100:7: note: expected ‘PileVD’ but argument is of type ‘struct vd **’
 char *getChoosenFile(PileVD PilevalDesc,int choice);
       ^
SearchEngine/SearchEngine.c: In function ‘researchSound’:
SearchEngine/SearchEngine.c:246:4: warning: passing argument 1 of ‘fileExists’ from incompatible pointer type [enabled by default]
    if(!fileExists(path)) printf("This file don\'t exist\n");
    ^
In file included from Descriptor/Picture/PictureDesc.h:10:0,
                 from Descriptor/BaseDesc.h:12,
                 from SearchEngine/SearchEngine.h:12,
                 from SearchEngine/SearchEngine.c:13:
FileManager/FileManager.h:31:6: note: expected ‘const char *’ but argument is of type ‘char **’
 Bool fileExists(char const * path);
      ^
SearchEngine/SearchEngine.c:247:3: warning: passing argument 1 of ‘fileExists’ from incompatible pointer type [enabled by default]
   } while (!fileExists(path) && validPath!=0);
   ^
In file included from Descriptor/Picture/PictureDesc.h:10:0,
                 from Descriptor/BaseDesc.h:12,
                 from SearchEngine/SearchEngine.h:12,
                 from SearchEngine/SearchEngine.c:13:
FileManager/FileManager.h:31:6: note: expected ‘const char *’ but argument is of type ‘char **’
 Bool fileExists(char const * path);
      ^
SearchEngine/SearchEngine.c:250:4: warning: passing argument 1 of ‘getAddress’ from incompatible pointer type [enabled by default]
    ID=getAddress(soundbase,path);
    ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:105:6: note: expected ‘ListBaseDesc’ but argument is of type ‘struct FILE *’
 long getAddress(ListBaseDesc list, char * path);
      ^
SearchEngine/SearchEngine.c:250:4: warning: passing argument 2 of ‘getAddress’ from incompatible pointer type [enabled by default]
    ID=getAddress(soundbase,path);
    ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:105:6: note: expected ‘char *’ but argument is of type ‘char **’
 long getAddress(ListBaseDesc list, char * path);
      ^
SearchEngine/SearchEngine.c:251:4: warning: passing argument 1 of ‘getDesc’ from incompatible pointer type [enabled by default]
    sdDesc=getDesc(soundbase , ID , SOUND);
    ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:75:8: note: expected ‘BaseDesc’ but argument is of type ‘struct FILE *’
 void * getDesc(BaseDesc base, long address, FileType type);
        ^
SearchEngine/SearchEngine.c:254:5: warning: conversion lacks type at end of format [-Wformat=]
     fscanf(soundbase , "%l" , &ID );
     ^
SearchEngine/SearchEngine.c:254:5: warning: too many arguments for format [-Wformat-extra-args]
SearchEngine/SearchEngine.c:255:5: warning: format ‘%s’ expects argument of type ‘char *’, but argument 3 has type ‘char **’ [-Wformat=]
     fscanf(soundbase, "%s" , pathOfList); // Search the iTh path of the ListBASE
     ^
SearchEngine/SearchEngine.c:257:5: warning: passing argument 1 of ‘getDesc’ from incompatible pointer type [enabled by default]
     fileOfDesc=getDesc(soundbase , ID , SOUND); // open the link of the linked descript
     ^
In file included from SearchEngine/SearchEngine.h:12:0,
                 from SearchEngine/SearchEngine.c:13:
Descriptor/BaseDesc.h:75:8: note: expected ‘BaseDesc’ but argument is of type ‘struct FILE *’
 void * getDesc(BaseDesc base, long address, FileType type);
        ^
SearchEngine/SearchEngine.c:258:5: warning: passing argument 2 of ‘compareSoundDesc’ from incompatible pointer type [enabled by default]
     percent=compareSoundDesc(sdDesc , fileOfDesc );
     ^
In file included from SearchEngine/SearchEngine.c:14:0:
SearchEngine/Sound/SoundSearch.h:35:7: note: expected ‘struct SoundDesc *’ but argument is of type ‘struct FILE *’
 float compareSoundDesc(SoundDesc *searchedDesc ,SoundDesc *indexedDesc);
       ^
SearchEngine/SearchEngine.c:259:5: warning: passing argument 3 of ‘addOrderVD’ makes integer from pointer without a cast [enabled by default]
     addOrderVD(PilevalDesc , percent , pathOfList); // add in decrease Order
     ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:88:6: note: expected ‘char’ but argument is of type ‘char **’
 void addOrderVD(PileVD *pvd, float perct , char nFile);
      ^
SearchEngine/SearchEngine.c:264:4: warning: passing argument 1 of ‘printBestList’ from incompatible pointer type [enabled by default]
    printBestList(PilevalDesc , 0);
    ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:94:6: note: expected ‘PileVD’ but argument is of type ‘struct vd **’
 void printBestList(PileVD pvd , int j);
      ^
SearchEngine/SearchEngine.c:270:7: warning: passing argument 1 of ‘getChoosenFile’ from incompatible pointer type [enabled by default]
       strcat(openPath , getChoosenFile(PilevalDesc,choice));
       ^
In file included from SearchEngine/SearchEngine.c:13:0:
SearchEngine/SearchEngine.h:100:7: note: expected ‘PileVD’ but argument is of type ‘struct vd **’
 char *getChoosenFile(PileVD PilevalDesc,int choice);
       ^
SearchEngine/SearchEngine.c: In function ‘addOrderVD’:
SearchEngine/SearchEngine.c:282:4: warning: passing argument 2 of ‘strcpy’ makes pointer from integer without a cast [enabled by default]
    strcpy(tmpPvd->nameFile, nFile);
    ^
In file included from Descriptor/BaseDesc.h:9:0,
                 from SearchEngine/SearchEngine.h:12,
                 from SearchEngine/SearchEngine.c:13:
/usr/include/string.h:129:14: note: expected ‘const char * __restrict__’ but argument is of type ‘char’
 extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
              ^
SearchEngine/SearchEngine.c:290:4: warning: passing argument 2 of ‘strcpy’ makes pointer from integer without a cast [enabled by default]
    strcpy(tmpPvd->nameFile, nFile);
    ^
In file included from Descriptor/BaseDesc.h:9:0,
                 from SearchEngine/SearchEngine.h:12,
                 from SearchEngine/SearchEngine.c:13:
/usr/include/string.h:129:14: note: expected ‘const char * __restrict__’ but argument is of type ‘char’
 extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
              ^
Interface/interface.c: In function ‘mainMenu’:
Interface/interface.c:54:4: warning: passing argument 1 of ‘enterGlobsVariables’ from incompatible pointer type [enabled by default]
    if(enterGlobsVariables(CONF_FILE_NAME)) printf("Succesfull saved parameters.\n");
    ^
In file included from Interface/interface.c:12:0:
Configurator/Configurator.h:63:6: note: expected ‘struct FILE *’ but argument is of type ‘char *’
 Bool enterGlobsVariables(FILE* confFile);
      ^
Interface/interface.c: In function ‘IndexationMenu’:
Interface/interface.c:95:3: warning: passing argument 1 of ‘getKeyboard_String’ from incompatible pointer type [enabled by default]
   validPath = getKeyboard_String(path,0, maxSizePath);
   ^
In file included from Configurator/Configurator.h:18:0,
                 from Interface/interface.c:12:
Input/Keyboard.h:92:5: note: expected ‘char *’ but argument is of type ‘char **’
 int getKeyboard_String(char * typedString, int minChar, int maxChar);
     ^
Interface/interface.c:96:3: warning: passing argument 1 of ‘fileExists’ from incompatible pointer type [enabled by default]
   if(fileExists(path)){
   ^
In file included from Descriptor/Picture/PictureDesc.h:10:0,
                 from Descriptor/BaseDesc.h:12,
                 from Interface/interface.h:11,
                 from Interface/interface.c:11:
FileManager/FileManager.h:31:6: note: expected ‘const char *’ but argument is of type ‘char **’
 Bool fileExists(char const * path);
      ^
Interface/interface.c:97:4: warning: passing argument 1 of ‘fopen’ from incompatible pointer type [enabled by default]
    fileTOindex=fopen(path,"r");
    ^
In file included from Descriptor/BaseDesc.h:7:0,
                 from Interface/interface.h:11,
                 from Interface/interface.c:11:
/usr/include/stdio.h:272:14: note: expected ‘const char * __restrict__’ but argument is of type ‘char **’
 extern FILE *fopen (const char *__restrict __filename,
              ^
Interface/interface.c:102:6: warning: passing argument 1 of ‘addDesc’ from incompatible pointer type [enabled by default]
      addDesc(basedesc,desc,SOUND);
      ^
In file included from Interface/interface.h:11:0,
                 from Interface/interface.c:11:
Descriptor/BaseDesc.h:64:6: note: expected ‘struct desc **’ but argument is of type ‘BaseDesc’
 void addDesc(BaseDesc *base, void * structDesc, FileType type);
      ^
Interface/interface.c:106:6: warning: passing argument 1 of ‘addDesc’ from incompatible pointer type [enabled by default]
      addDesc(basedesc,desc,PICTURE);
      ^
In file included from Interface/interface.h:11:0,
                 from Interface/interface.c:11:
Descriptor/BaseDesc.h:64:6: note: expected ‘struct desc **’ but argument is of type ‘BaseDesc’
 void addDesc(BaseDesc *base, void * structDesc, FileType type);
      ^
Interface/interface.c:122:4: warning: passing argument 1 of ‘strcpy’ from incompatible pointer type [enabled by default]
    strcpy(path,""); // Permite to  secure the next path to enter by the user
    ^
In file included from Descriptor/BaseDesc.h:9:0,
                 from Interface/interface.h:11,
                 from Interface/interface.c:11:
/usr/include/string.h:129:14: note: expected ‘char * __restrict__’ but argument is of type ‘char **’
 extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
              ^
Interface/interface.c: In function ‘ResearchMenu’:
Interface/interface.c:181:5: warning: passing argument 2 of ‘fopen’ makes pointer from integer without a cast [enabled by default]
     IMGbase=fopen("PictureBaseDesc.db" , 'r');
     ^
In file included from Descriptor/BaseDesc.h:7:0,
                 from Interface/interface.h:11,
                 from Interface/interface.c:11:
/usr/include/stdio.h:272:14: note: expected ‘const char * __restrict__’ but argument is of type ‘int’
 extern FILE *fopen (const char *__restrict __filename,
              ^
Interface/interface.c:191:5: warning: passing argument 2 of ‘fopen’ makes pointer from integer without a cast [enabled by default]
     SOUNDbase=fopen("SoundBaseDesc.db" , 'r');
     ^
In file included from Descriptor/BaseDesc.h:7:0,
                 from Interface/interface.h:11,
                 from Interface/interface.c:11:
/usr/include/stdio.h:272:14: note: expected ‘const char * __restrict__’ but argument is of type ‘int’
 extern FILE *fopen (const char *__restrict __filename,
              ^
Descriptor/Sound/SoundDesc.c: In function ‘printSoundDesc’:
Descriptor/Sound/SoundDesc.c:136:2: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 2 has type ‘int’ [-Wformat=]
  printf("\nId: %ld", desc->address);
  ^
Descriptor/Picture/PictureDesc.c: In function ‘readPictureDesc’:
Descriptor/Picture/PictureDesc.c:120:7: warning: format ‘%f’ expects argument of type ‘float *’, but argument 3 has type ‘double’ [-Wformat=]
       fscanf(file,"%f" , (*desc).histogram[i]);
       ^
Configurator/Configurator.c: In function ‘enterGlobsVariables’:
Configurator/Configurator.c:57:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.listBaseDesc_maxPathLength, 0, MAXNAMLEN) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:61:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.textDesc_occurThreshold, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:65:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.textDesc_maxTerms, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:70:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.pictureDesc_nbWeightyBits, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:74:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.pictureDesc_compTolerance, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:78:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.soundDesc_windowSize, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:82:2: warning: passing argument 1 of ‘getKeyboard_Long’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Long(&globs.soundDesc_nbInterval, 0, INT_MAX) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:45:5: note: expected ‘long int *’ but argument is of type ‘int *’
 int getKeyboard_Long(long * typedLong, long min, long max);
     ^
Configurator/Configurator.c:95:2: warning: passing argument 1 of ‘getKeyboard_Double’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Double(&globs.soundDesc_minWindowMatch, 0.0, 1.0) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:69:5: note: expected ‘double *’ but argument is of type ‘float *’
 int getKeyboard_Double(double * typedDouble, double min, double max);
     ^
Configurator/Configurator.c:99:2: warning: passing argument 1 of ‘getKeyboard_Double’ from incompatible pointer type [enabled by default]
  while(getKeyboard_Double(&globs.soundDesc_minQuantifMatch, 0.0, 1.0) != 1)
  ^
In file included from Configurator/Configurator.h:18:0,
                 from Configurator/Configurator.c:7:
Input/Keyboard.h:69:5: note: expected ‘double *’ but argument is of type ‘float *’
 int getKeyboard_Double(double * typedDouble, double min, double max);
     ^
Descriptor/BaseDesc.c: In function ‘initBaseDesc’:
Descriptor/BaseDesc.c:188:5: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long int’ [-Wformat=]
     printf("%d\n", ftell(baseDesc));
     ^
main.c: In function ‘main’:
main.c:12:3: warning: passing argument 1 of ‘enterGlobsVariables’ from incompatible pointer type [enabled by default]
   if(enterGlobsVariables(CONF_FILE_NAME)) printf("Succesfull saved parameters.\n");
   ^
In file included from main.c:6:0:
Configurator/Configurator.h:63:6: note: expected ‘struct FILE *’ but argument is of type ‘char *’
 Bool enterGlobsVariables(FILE* confFile);
      ^
